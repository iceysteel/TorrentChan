1. user hits server with request
2. chan server replies with client.html
3. client.html asks server for contents.json (need to come up with a cooler name)
4. client.html downloads threads and their 5 most recent posts as post.torrent(s)
5. if user is on thread page then poll server for updates every 30 secs?

server has no database, 

images and files arent saved onto the server at any point, even for seeding, users just seed them to eachother, just one big json file in memory (cause thats fast nigga)

moderation is done by the users and threads under a certain reputation are automatically hidden and not downloaded 

TODO:
	done:
	-make flask pump out a json file with posts and threads
	-create models for threads to posts (one thread to many posts)
	-make flask output contents.json
	-write very simple frontend code that requests contents.json from flask and displays contents
	-integrate webtorrent to make images and posts work
	-make client hit api and show catalog

	need to be done:
	-make frontend turn new posts into magnet links

	-make client show reply view for thread
	
	-make client able to post and start new threads
